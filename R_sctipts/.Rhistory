findfrequency(ts2)
library(sazedR)
library(forecast)
# seasonal_no_trend.csv
data_csv2<-read.csv('data\\seasonal_no_trend.csv')
ts2 = ts(data_csv2['value'])
sazed(ts2)
findfrequency(ts2)
# seasonal_no_trend.csv, outlier
data_csv2<-read.csv('data\\seasonal_no_trend.csv')
ts2 = ts(data_csv2['value'])
ts2[71] = 2
sazed(ts2)
findfrequency(ts2)
# seasonal.csv
data_csv2<-read.csv('data\\seasonal.csv')
ts2 = ts(data_csv2['value'])
sazed(ts2)
findfrequency(ts2)
# seasonal.csv, outliers
data_csv2<-read.csv('data\\seasonal.csv')
ts2 = ts(data_csv2['value'])
ts2[76] = 5
ts2[77] = 5
ts2[78] = 5
ts2[161] = -2
ts2[162] = -2
sazed(ts2)
findfrequency(ts2)
# tsdl_271.csv, T = 365
data_csv2<-read.csv('data\\tsdl_271.csv')
ts2 = ts(data_csv2['value'])
x = 1:length(ts2)
plot(x, ts2, type = 'l')+
grid()
sazed(ts2)
findfrequency(ts2)
# tsdl_271.csv, T = 365, two outliers
data_csv2<-read.csv('data\\tsdl_271.csv')
ts2 = ts(data_csv2['value'])
ts2[601] = -40
ts2[1101] = 30
x = 1:length(ts2)
plot(x, ts2, type = 'l')+
grid()
sazed(ts2)
findfrequency(ts2)
# tsdl_331.csv, T = 365
data_csv2<-read.csv('data\\tsdl_331.csv')
ts2 = ts(data_csv2['value'])
x = 1:length(ts2)
plot(x, ts2, type = 'l')+
grid()
sazed(ts2)
findfrequency(ts2)
# tsdl_331.csv, T = 365, two outliers
data_csv2<-read.csv('data\\tsdl_331.csv')
ts2 = ts(data_csv2['value'])
ts2[201] = -30
ts2[801] = 30
x = 1:length(ts2)
plot(x, ts2, type = 'l')+
grid()
sazed(ts2)
findfrequency(ts2)
# tsdl_91_weekly.csv, T = 52
data_csv2<-read.csv('data\\tsdl_91_weekly.csv')
ts2 = ts(data_csv2['value'])
x = 1:length(ts2)
plot(x, ts2, type = 'l')+
grid()
sazed(ts2)
findfrequency(ts2)
# tsdl_91_weekly.csv, T = 52, three outliers
data_csv2<-read.csv('data\\tsdl_91_weekly.csv')
ts2 = ts(data_csv2['value'])
ts2[61] = 10
ts2[401] = 35
ts2[301] = 30
x = 1:length(ts2)
plot(x, ts2, type = 'l')+
grid()
sazed(ts2)
findfrequency(ts2)
# tsdl_92_weekly.csv, T = 52
data_csv2<-read.csv('data\\tsdl_92_weekly.csv')
ts2 = ts(data_csv2['value'])
x = 1:length(ts2)
plot(x, ts2, type = 'l')+
grid()
sazed(ts2)
findfrequency(ts2)
# tsdl_92_weekly.csv, T = 52, an outlier
data_csv2<-read.csv('data\\tsdl_92_weekly.csv')
ts2 = ts(data_csv2['value'])
ts2[111] = 2.5
x = 1:length(ts2)
plot(x, ts2, type = 'l')+
grid()
sazed(ts2)
findfrequency(ts2)
# tsdl_244.csv, T = 12
data_csv2<-read.csv('data\\tsdl_244.csv')
ts2 = ts(data_csv2['value'])
x = 1:length(ts2)
plot(x, ts2, type = 'l')+
grid()
sazed(ts2)
findfrequency(ts2)
# tsdl_244.csv, T = 12, an outlier
data_csv2<-read.csv('data\\tsdl_244.csv')
ts2 = ts(data_csv2['value'])
ts2[26] = 300
x = 1:length(ts2)
plot(x, ts2, type = 'l')+
grid()
sazed(ts2)
findfrequency(ts2)
# tsdl_358.csv, T = 12
data_csv2<-read.csv('data\\tsdl_358.csv')
ts2 = ts(data_csv2['value'])
x = 1:length(ts2)
plot(x, ts2, type = 'l')+
grid()
sazed(ts2)
findfrequency(ts2)
# tsdl_358.csv, T = 12, two outliers
data_csv2<-read.csv('data\\tsdl_358.csv')
ts2 = ts(data_csv2['value'])
ts2[16] = 1000
ts2[66] = 1100
x = 1:length(ts2)
plot(x, ts2, type = 'l')+
grid()
sazed(ts2)
findfrequency(ts2)
library(AER)
library(fpp)
library(fpp2)
library(astsa)
library(expsmooth)
library(fma)
library(TSA)
library(sazedR)
library(forecast)
data_list = c(BondYield='AER', DutchSales='AER', UKNonDurables='AER',
birth='astsa', cmort='astsa',
flu='astsa', gas='astsa', hor='astsa', part='astsa',
prodn='astsa', qinfl='astsa', qintr='astsa', rec='astsa',
so2='astsa', soi='astsa', sunspotz='astsa', tempr='astsa',
unemp='astsa', UnempRate='astsa',
bonds='expsmooth', cangas='expsmooth', enplanements='expsmooth',
frexport='expsmooth', mcopper='expsmooth', ukcars='expsmooth',
usgdp='expsmooth', utility='expsmooth',
vehicles='expsmooth', visitors='expsmooth',
airpass='fma', beer='fma', bricksq='fma', condmilk='fma', dole='fma',
elec='fma', fancy='fma', hsales='fma', hsales2='fma',
invent15='fma',labour='fma', milk='fma', motion='fma',
pigs='fma', plastics='fma', pollution='fma', qelec='fma',
qsales='fma', shampoo='fma', ukdeaths='fma',
usdeaths='fma', uselec='fma', writing='fma',
cafe='fpp', euretail='fpp',
a10='fpp2', ausbeer='fpp2', auscafe='fpp2', ausgdp='fpp2',
austourists='fpp2', debitcards='fpp2', elecequip='fpp2',
gasoline='fpp2', h02='fpp2', hyndsight='fpp2', qauselec='fpp2',
qcement='fpp2', qgas='fpp2', usmelec='fpp2',
airmiles='TSA', beersales='TSA',
co2='TSA', flow='TSA', hours='TSA', milk='TSA', JJ='TSA', oilfilters='TSA',
prescrip='TSA', prey.eq='TSA', retail='TSA', tempdub='TSA',
wages='TSA', winnebago='TSA')
#data_list = c(BondYield='AER', DutchSales='AER', UKNonDurables='AER')
# get periods detected by sazed and findfrequency
freqs = c()
sazed_freqs = c()
findf_freqs = c()
for (data.name in names(data_list)) {
pkg <- data_list[[data.name]]
data(list=c(data.name), package=pkg)
data <- data.name %>% get()
freqs <- append(freqs, frequency(data))
x <- as.vector(data)
sazed_fre = sazed(x)
findf_fre = findfrequency(x)
sazed_freqs <- append(sazed_freqs, sazed_fre)
findf_freqs <- append(findf_freqs, findf_fre)
}
# cal error
error_measure_num<-function(periods_detect, periods_real, errors){
if (length(periods_detect) != length(periods_real)){
return(-1)
}
abs_diff <- abs(floor(periods_detect) - floor(periods_real))
abs_diff_ratio <- abs_diff / floor(periods_real)
num <- length(periods_detect)
errors_sort <- sort(errors)
num_error = length(errors_sort)
error_distr <- integer(num_error+1)
for (i in 1:num){
for (j in 1:num_error){
if (abs_diff_ratio[i] <= errors_sort[j]){
error_distr[j] = error_distr[j] + 1
break
}
}
if (abs_diff_ratio[i] > errors_sort[num_error]){
error_distr[num_error+1] = error_distr[num_error+1] + 1
}
}
return(error_distr)
}
errors = c(0, 0.05, 0.1, 0.15)
sazed_error_distr = error_measure_num(sazed_freqs, freqs, errors)
findf_error_distr = error_measure_num(findf_freqs, freqs, errors)
sazed_error_distr
findf_error_distr
findf_error_distr = error_measure_num(findf_freqs, freqs, errors)
findf_error_distr
library(AER)
library(fpp)
library(fpp2)
library(astsa)
library(expsmooth)
library(fma)
library(TSA)
library(sazedR)
library(forecast)
data_list = c(BondYield='AER', DutchSales='AER', UKNonDurables='AER',
birth='astsa', cmort='astsa',
flu='astsa', gas='astsa', hor='astsa', part='astsa',
prodn='astsa', qinfl='astsa', qintr='astsa', rec='astsa',
so2='astsa', soi='astsa', sunspotz='astsa', tempr='astsa',
unemp='astsa', UnempRate='astsa',
bonds='expsmooth', cangas='expsmooth', enplanements='expsmooth',
frexport='expsmooth', mcopper='expsmooth', ukcars='expsmooth',
usgdp='expsmooth', utility='expsmooth',
vehicles='expsmooth', visitors='expsmooth',
airpass='fma', beer='fma', bricksq='fma', condmilk='fma', dole='fma',
elec='fma', fancy='fma', hsales='fma', hsales2='fma',
invent15='fma',labour='fma', milk='fma', motion='fma',
pigs='fma', plastics='fma', pollution='fma', qelec='fma',
qsales='fma', shampoo='fma', ukdeaths='fma',
usdeaths='fma', uselec='fma', writing='fma',
cafe='fpp', euretail='fpp',
a10='fpp2', ausbeer='fpp2', auscafe='fpp2', ausgdp='fpp2',
austourists='fpp2', debitcards='fpp2', elecequip='fpp2',
gasoline='fpp2', h02='fpp2', hyndsight='fpp2', qauselec='fpp2',
qcement='fpp2', qgas='fpp2', usmelec='fpp2',
airmiles='TSA', beersales='TSA',
co2='TSA', flow='TSA', hours='TSA', milk='TSA', JJ='TSA', oilfilters='TSA',
prescrip='TSA', prey.eq='TSA', retail='TSA', tempdub='TSA',
wages='TSA', winnebago='TSA')
#data_list = c(BondYield='AER', DutchSales='AER', UKNonDurables='AER')
# get periods detected by sazed and findfrequency
freqs = c()
sazed_freqs = c()
findf_freqs = c()
for (data.name in names(data_list)) {
pkg <- data_list[[data.name]]
data(list=c(data.name), package=pkg)
data <- data.name %>% get()
freqs <- append(freqs, frequency(data))
x <- as.vector(data)
sazed_fre = sazed(x)
findf_fre = findfrequency(x)
sazed_freqs <- append(sazed_freqs, sazed_fre)
findf_freqs <- append(findf_freqs, findf_fre)
}
# cal error
error_measure_num<-function(periods_detect, periods_real, errors){
if (length(periods_detect) != length(periods_real)){
return(-1)
}
abs_diff <- abs(floor(periods_detect) - floor(periods_real))
abs_diff_ratio <- abs_diff / floor(periods_real)
num <- length(periods_detect)
errors_sort <- sort(errors)
num_error = length(errors_sort)
error_distr <- integer(num_error+1)
for (i in 1:num){
for (j in 1:num_error){
if (abs_diff_ratio[i] <= errors_sort[j]){
error_distr[j] = error_distr[j] + 1
break
}
}
if (abs_diff_ratio[i] > errors_sort[num_error]){
error_distr[num_error+1] = error_distr[num_error+1] + 1
}
}
return(error_distr)
}
errors = c(0, 0.05, 0.1, 0.15)
sazed_error_distr = error_measure_num(sazed_freqs, freqs, errors)
findf_error_distr = error_measure_num(findf_freqs, freqs, errors)
sazed_error_distr
findf_error_distr
